/*
 * Fernandez-Rivero-RNG - A fast normal distribution pseudo-random number generator
 * Copyright (C) 2009 by Daniel Reutter <reutter@psy.lmu.de>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef  __FR_NRAND_H__
#define  __FR_NRAND_H__

// Type Definition of the preferred floating point type.
typedef long double float_type;

// These functions provide access to an implementation of the Fernandez-Rivero RNG as defined in http://www.springerlink.com/content/yj82465n0q755572/
// The functionality is not threadsafe. FIXME: Make the functionality threadsafe.

// Seeds the Fernandez-Rivero RNG with the given seed for the hash
// function and a standard deviation for the subsequent random numbers.
void snrand(unsigned int seed);

// Returns a normal distributed random number generated by the
// Fernandez-Rivero method with the standard deviation of 1.
float_type nrand();

// Returns a normal distributed random number generated by the
// Fernandez-Rivero method with the given standard deviation.
float_type nrandsd(float_type sd);

#endif /* __FR_NRAND_H__*/
